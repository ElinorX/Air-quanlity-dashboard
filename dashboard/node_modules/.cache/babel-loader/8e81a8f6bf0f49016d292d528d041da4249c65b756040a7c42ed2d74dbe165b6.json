{"ast":null,"code":"import \"core-js/modules/es.set.difference.v2.js\";\nimport \"core-js/modules/es.set.intersection.v2.js\";\nimport \"core-js/modules/es.set.is-disjoint-from.v2.js\";\nimport \"core-js/modules/es.set.is-subset-of.v2.js\";\nimport \"core-js/modules/es.set.is-superset-of.v2.js\";\nimport \"core-js/modules/es.set.symmetric-difference.v2.js\";\nimport \"core-js/modules/es.set.union.v2.js\";\nimport { ref, onMounted, watch } from 'vue';\nimport * as d3 from 'd3';\nexport default {\n  name: 'App',\n  setup() {\n    const timeSeriesChart = ref(null);\n    const mapChart = ref(null);\n    const barChart = ref(null);\n    const pieChart = ref(null);\n    const selectedPollutant = ref('');\n    const selectedStation = ref('');\n    const data = ref(null);\n    const stations = ref([]);\n    const metadata = ref({\n      pollutants: []\n    });\n    const timeRange = ref('');\n    const loadData = async () => {\n      try {\n        const response = await fetch('/air_quality_visualization.json');\n        data.value = await response.json();\n        metadata.value = {\n          ...data.value.metadata,\n          pollutants: ['ALL', ...data.value.metadata.pollutants]\n        };\n        stations.value = data.value.stations;\n        selectedPollutant.value = metadata.value.pollutants[0];\n        timeRange.value = `${metadata.value.dateRange.start} to ${metadata.value.dateRange.end}`;\n      } catch (error) {\n        console.error('Error loading data:', error);\n      }\n    };\n    const drawTimeSeries = () => {\n      if (!data.value || !timeSeriesChart.value) return;\n      const margin = {\n        top: 20,\n        right: 120,\n        bottom: 30,\n        left: 60\n      };\n      const width = timeSeriesChart.value.clientWidth - margin.left - margin.right;\n      const height = 400 - margin.top - margin.bottom;\n      d3.select(timeSeriesChart.value).selectAll('*').remove();\n      const svg = d3.select(timeSeriesChart.value).append('svg').attr('width', width + margin.left + margin.right).attr('height', height + margin.top + margin.bottom).append('g').attr('transform', `translate(${margin.left},${margin.top})`);\n      const pollutantColors = {\n        'PM2.5': '#FF6B6B',\n        'PM10': '#4ECDC4',\n        'NO2': '#45B7D1',\n        'SO2': '#96CEB4',\n        'CO': '#FFEEAD',\n        'O3': '#D4A5A5'\n      };\n      let filteredData;\n      if (selectedPollutant.value === 'ALL') {\n        filteredData = data.value.timeSeriesData;\n      } else {\n        filteredData = data.value.timeSeriesData.filter(d => d.Pollutant === selectedPollutant.value);\n      }\n      filteredData = filteredData.sort((a, b) => new Date(a.Date) - new Date(b.Date));\n      const x = d3.scaleTime().domain(d3.extent(filteredData, d => new Date(d.Date))).range([0, width]);\n      const y = d3.scaleLinear().domain([0, d3.max(filteredData, d => +d.Concentration)]).range([height, 0]).nice();\n      svg.append('g').attr('transform', `translate(0,${height})`).call(d3.axisBottom(x).ticks(10)).selectAll('text').style('text-anchor', 'middle');\n      svg.append('g').call(d3.axisLeft(y));\n      svg.append('text').attr('transform', 'rotate(-90)').attr('y', 0 - margin.left).attr('x', 0 - height / 2).attr('dy', '1em').style('text-anchor', 'middle').text('Concentration');\n      if (selectedPollutant.value === 'ALL') {\n        const pollutants = [...new Set(filteredData.map(d => d.Pollutant))];\n        pollutants.forEach(pollutant => {\n          const pollutantData = filteredData.filter(d => d.Pollutant === pollutant);\n          const line = d3.line().x(d => x(new Date(d.Date))).y(d => y(+d.Concentration)).curve(d3.curveMonotoneX);\n          const path = svg.append('path').datum(pollutantData).attr('fill', 'none').attr('stroke', pollutantColors[pollutant]).attr('stroke-width', 2).attr('d', line);\n          const pathLength = path.node().getTotalLength();\n          path.attr('stroke-dasharray', pathLength).attr('stroke-dashoffset', pathLength).transition().duration(2000).attr('stroke-dashoffset', 0);\n        });\n        const legend = svg.append('g').attr('class', 'legend').attr('transform', `translate(${width + 10}, 0)`);\n        const legendItems = legend.selectAll('.legend-item').data(pollutants).enter().append('g').attr('class', 'legend-item').attr('transform', (d, i) => `translate(0, ${i * 20})`);\n        legendItems.append('line').attr('x1', 0).attr('x2', 20).attr('y1', 10).attr('y2', 10).attr('stroke', d => pollutantColors[d]).attr('stroke-width', 2);\n        legendItems.append('text').attr('x', 25).attr('y', 10).attr('dy', '.35em').style('font-size', '12px').text(d => d);\n      } else {\n        const line = d3.line().x(d => x(new Date(d.Date))).y(d => y(+d.Concentration)).curve(d3.curveMonotoneX);\n        const path = svg.append('path').datum(filteredData).attr('fill', 'none').attr('stroke', pollutantColors[selectedPollutant.value]).attr('stroke-width', 2).attr('d', line);\n        const pathLength = path.node().getTotalLength();\n        path.attr('stroke-dasharray', pathLength).attr('stroke-dashoffset', pathLength).transition().duration(2000).attr('stroke-dashoffset', 0);\n        const dots = svg.selectAll('.dot').data(filteredData).enter().append('circle').attr('class', 'dot').attr('cx', d => x(new Date(d.Date))).attr('cy', d => y(+d.Concentration)).attr('r', 4).attr('fill', pollutantColors[selectedPollutant.value]).style('opacity', 0);\n        dots.transition().delay((d, i) => i * 10).style('opacity', 1);\n        const tooltip = d3.select(timeSeriesChart.value).append('div').attr('class', 'tooltip').style('opacity', 0).style('position', 'absolute').style('background-color', 'white').style('border', '1px solid #ddd').style('padding', '10px').style('border-radius', '5px').style('pointer-events', 'none').style('z-index', 100);\n        dots.on('mouseover', (event, d) => {\n          const chartRect = timeSeriesChart.value.getBoundingClientRect();\n          const mouseX = event.clientX - chartRect.left;\n          const mouseY = event.clientY - chartRect.top;\n          tooltip.transition().duration(200).style('opacity', .9);\n          tooltip.html(`\n            Date: ${d.Date}<br/>\n            Concentration: ${d.Concentration} ${d.Units}<br/>\n            AQI: ${d['Daily AQI Value']}\n          `).style('left', `${mouseX + 10}px`).style('top', `${mouseY - 28}px`);\n          d3.select(event.target).transition().duration(200).attr('r', 6);\n        }).on('mousemove', event => {\n          const chartRect = timeSeriesChart.value.getBoundingClientRect();\n          const mouseX = event.clientX - chartRect.left;\n          const mouseY = event.clientY - chartRect.top;\n          tooltip.style('left', `${mouseX + 10}px`).style('top', `${mouseY - 28}px`);\n        }).on('mouseout', event => {\n          tooltip.transition().duration(500).style('opacity', 0);\n          d3.select(event.target).transition().duration(200).attr('r', 4);\n        });\n      }\n    };\n    const drawMap = async () => {\n      if (!data.value || !mapChart.value) return;\n      const margin = {\n        top: 20,\n        right: 20,\n        bottom: 20,\n        left: 20\n      };\n      const width = mapChart.value.clientWidth - margin.left - margin.right;\n      const height = 400 - margin.top - margin.bottom;\n      d3.select(mapChart.value).selectAll('*').remove();\n      const svg = d3.select(mapChart.value).append('svg').attr('width', width + margin.left + margin.right).attr('height', height + margin.top + margin.bottom).append('g').attr('transform', `translate(${margin.left},${margin.top})`);\n      try {\n        // Load map data\n        const response = await fetch('/geo/los-angeles-county.geojson');\n        const laCounty = await response.json();\n        const projection = d3.geoMercator().fitSize([width, height], laCounty);\n        const path = d3.geoPath().projection(projection);\n        svg.append('g').selectAll('path').data(laCounty.features).enter().append('path').attr('d', path).attr('fill', '#f0f0f0').attr('stroke', '#ccc').attr('stroke-width', 0.5);\n        const stationGroups = svg.append('g').selectAll('.station').data(stations.value).enter().append('g').attr('class', 'station').attr('transform', d => {\n          const [x, y] = projection([+d['Site Longitude'], +d['Site Latitude']]);\n          return `translate(${x},${y})`;\n        });\n        stationGroups.append('circle').attr('r', 8).attr('fill', d => d['Site ID'] === selectedStation.value ? '#f44336' : '#2196F3').attr('opacity', 0).transition().duration(1000).attr('opacity', 0.7);\n        stationGroups.on('mouseover', function (event, d) {\n          d3.select(this).append('text').attr('class', 'station-label').attr('dy', -10).text(d['Local Site Name']).style('text-anchor', 'middle').style('font-size', '12px').style('opacity', 0).transition().duration(200).style('opacity', 1);\n          const tooltip = d3.select(mapChart.value).append('div').attr('class', 'map-tooltip').style('position', 'absolute').style('background-color', 'white').style('padding', '10px').style('border-radius', '5px').style('box-shadow', '0 2px 5px rgba(0,0,0,0.2)').style('pointer-events', 'none').style('opacity', 0);\n          tooltip.html(`\n              <strong>${d['Local Site Name']}</strong><br/>\n              Longitude: ${d['Site Longitude']}<br/>\n              Latitude: ${d['Site Latitude']}<br/>\n              Monitored Pollutants: ${d['Pollutant'].length} types\n            `).style('left', event.pageX + 10 + 'px').style('top', event.pageY - 10 + 'px').transition().duration(200).style('opacity', 1);\n          d3.select(this).select('circle').transition().duration(200).attr('r', 12);\n        }).on('mouseout', function (event, d) {\n          d3.select(this).select('.station-label').remove();\n          d3.select(mapChart.value).selectAll('.map-tooltip').transition().duration(200).style('opacity', 0).remove();\n          if (d['Site ID'] !== selectedStation.value) {\n            d3.select(this).select('circle').transition().duration(200).attr('r', 8).attr('fill', '#2196F3').attr('opacity', 0.7);\n          } else {\n            d3.select(this).select('circle').transition().duration(200).attr('r', 12).attr('fill', '#f44336').attr('opacity', 0.7);\n          }\n        }).on('click', (event, d) => {\n          stationGroups.selectAll('circle').transition().duration(200).attr('fill', '#2196F3').attr('r', 8).attr('opacity', 0.7);\n          d3.select(event.currentTarget).select('circle').transition().duration(200).attr('fill', '#f44336').attr('r', 12).attr('opacity', 0.7);\n          selectedStation.value = d['Site ID'];\n          handleStationChange();\n        });\n        const zoom = d3.zoom().scaleExtent([1, 8]).on('zoom', event => {\n          svg.selectAll('path').attr('transform', event.transform);\n          svg.selectAll('.station').attr('transform', function (d) {\n            const [x, y] = projection([+d['Site Longitude'], +d['Site Latitude']]);\n            return `translate(${event.transform.applyX(x)},${event.transform.applyY(y)})`;\n          });\n        });\n        svg.call(zoom);\n      } catch (error) {\n        console.error('Error loading map data:', error);\n        svg.append('text').attr('x', width / 2).attr('y', height / 2).attr('text-anchor', 'middle').text('Error loading map data');\n      }\n    };\n    const drawBarChart = () => {\n      if (!data.value || !barChart.value) return;\n      const margin = {\n        top: 20,\n        right: 20,\n        bottom: 40,\n        left: 40\n      };\n      const width = barChart.value.clientWidth - margin.left - margin.right;\n      const height = 400 - margin.top - margin.bottom;\n      d3.select(barChart.value).selectAll('*').remove();\n      const svg = d3.select(barChart.value).append('svg').attr('width', width + margin.left + margin.right).attr('height', height + margin.top + margin.bottom).append('g').attr('transform', `translate(${margin.left},${margin.top})`);\n      let stationStats = data.value.stationStats;\n      if (selectedStation.value) {\n        stationStats = stationStats.filter(stat => stat['Site ID'] === selectedStation.value);\n      }\n      const allPollutants = metadata.value.pollutants.filter(p => p !== 'ALL');\n      let pollutantCounts = {};\n      allPollutants.forEach(pollutant => {\n        pollutantCounts[pollutant] = 0;\n      });\n      stationStats.forEach(stat => {\n        if (stat.Pollutant in pollutantCounts) {\n          pollutantCounts[stat.Pollutant]++;\n        }\n      });\n      const totalStations = selectedStation.value ? 1 : stations.value.length;\n      const barData = allPollutants.map(pollutant => ({\n        pollutant,\n        count: pollutantCounts[pollutant],\n        percentage: pollutantCounts[pollutant] / totalStations * 100\n      }));\n\n      // Create scales\n      const x = d3.scaleBand().range([0, width]).domain(allPollutants).padding(0.3);\n      const y = d3.scaleLinear().range([height, 0]).domain([0, 100]);\n      svg.append('g').attr('transform', `translate(0,${height})`).call(d3.axisBottom(x)).selectAll('text').style('text-anchor', 'end').attr('dx', '-.8em').attr('dy', '.15em').attr('transform', 'rotate(-45)');\n      svg.append('g').call(d3.axisLeft(y).tickFormat(d => d + '%'));\n      const bars = svg.selectAll('.bar').data(barData).enter().append('rect').attr('class', 'bar').attr('x', d => x(d.pollutant)).attr('width', x.bandwidth()).attr('y', height).attr('height', 0).attr('fill', d => d.pollutant === selectedPollutant.value ? '#f44336' : '#2196F3');\n      bars.transition().duration(1000).attr('y', d => y(d.percentage)).attr('height', d => height - y(d.percentage));\n      svg.selectAll('.bar-label').data(barData).enter().append('text').attr('class', 'bar-label').attr('x', d => x(d.pollutant) + x.bandwidth() / 2).attr('y', d => y(d.percentage) - 5).attr('text-anchor', 'middle').text(d => `${d.percentage.toFixed(1)}%`).style('opacity', 0).transition().duration(1000).style('opacity', 1);\n    };\n    const drawPieChart = () => {\n      if (!data.value || !pieChart.value) return;\n      const margin = {\n        top: 20,\n        right: 160,\n        bottom: 20,\n        left: 20\n      };\n      const width = pieChart.value.clientWidth - margin.left - margin.right;\n      const height = 400 - margin.top - margin.bottom;\n      const radius = Math.min(width, height) / 2;\n      d3.select(pieChart.value).selectAll('*').remove();\n      const svg = d3.select(pieChart.value).append('svg').attr('width', width + margin.left + margin.right).attr('height', height + margin.top + margin.bottom).append('g').attr('transform', `translate(${width / 2 + margin.left},${height / 2 + margin.top})`);\n      let filteredData = data.value.timeSeriesData;\n      if (selectedStation.value) {\n        filteredData = filteredData.filter(d => d['Site ID'] === selectedStation.value);\n      }\n      const agiRanges = [{\n        name: 'Good',\n        range: '0-50',\n        min: 0,\n        max: 50,\n        color: '#00e400'\n      }, {\n        name: 'Moderate',\n        range: '51-100',\n        min: 51,\n        max: 100,\n        color: '#ffff00'\n      }, {\n        name: 'Unhealthy for Sensitive Groups',\n        range: '101-150',\n        min: 101,\n        max: 150,\n        color: '#ff7e00'\n      }, {\n        name: 'Unhealthy',\n        range: '151-200',\n        min: 151,\n        max: 200,\n        color: '#ff0000'\n      }, {\n        name: 'Very Unhealthy',\n        range: '201-300',\n        min: 201,\n        max: 300,\n        color: '#99004c'\n      }, {\n        name: 'Hazardous',\n        range: '>300',\n        min: 301,\n        max: Infinity,\n        color: '#7e0023'\n      }];\n      const pieData = agiRanges.map(range => ({\n        ...range,\n        value: filteredData.filter(d => d['Daily AQI Value'] >= range.min && d['Daily AQI Value'] <= range.max).length\n      })).filter(d => d.value > 0);\n      const total = d3.sum(pieData, d => d.value);\n      const pie = d3.pie().value(d => d.value).sort(null);\n      const arc = d3.arc().innerRadius(radius * 0.4).outerRadius(radius * 0.8);\n      const arcs = svg.selectAll('.arc').data(pie(pieData)).enter().append('g').attr('class', 'arc');\n      arcs.append('path').attr('d', arc).attr('fill', d => d.data.color).attr('stroke', 'white').style('stroke-width', '2px').style('opacity', 0).transition().duration(1000).style('opacity', 1).attrTween('d', function (d) {\n        const interpolate = d3.interpolate({\n          startAngle: 0,\n          endAngle: 0\n        }, d);\n        return function (t) {\n          return arc(interpolate(t));\n        };\n      });\n      const legend = svg.append('g').attr('transform', `translate(${radius + 30}, ${-radius})`);\n      const legendItems = legend.selectAll('.legend-item').data(pieData).enter().append('g').attr('class', 'legend-item').attr('transform', (d, i) => `translate(0, ${i * 60})`);\n      legendItems.append('rect').attr('width', 20).attr('height', 20).attr('fill', d => d.color).style('opacity', 0).transition().duration(1000).style('opacity', 1);\n      const legendText = legendItems.append('text').attr('x', 30).attr('y', 15).style('font-size', '12px').style('opacity', 0);\n      legendText.append('tspan').text(d => `${d.name} (${d.range})`).style('font-weight', 'bold');\n      legendText.append('tspan').attr('x', 30).attr('dy', '1.2em').text(d => `${d.value} times (${(d.value / total * 100).toFixed(1)}%)`);\n      legendText.transition().delay(1000).duration(500).style('opacity', 1);\n      const centerText = svg.append('text').attr('text-anchor', 'middle').style('opacity', 0);\n      centerText.append('tspan').text('AQI').attr('x', 0).attr('dy', '0em').style('font-size', '24px').style('font-weight', 'bold');\n      centerText.append('tspan').text('Distribution').attr('x', 0).attr('dy', '1.2em').style('font-size', '18px');\n      centerText.transition().delay(1500).duration(500).style('opacity', 1);\n    };\n    const handleStationChange = () => {\n      drawPieChart();\n      drawBarChart();\n    };\n    watch(selectedPollutant, () => {\n      drawTimeSeries();\n      drawBarChart();\n    });\n    const handleResize = () => {\n      drawTimeSeries();\n      drawMap();\n      drawBarChart();\n      drawPieChart();\n    };\n    onMounted(async () => {\n      await loadData();\n      drawTimeSeries();\n      drawMap();\n      drawBarChart();\n      drawPieChart();\n      window.addEventListener('resize', handleResize);\n    });\n    return {\n      timeSeriesChart,\n      mapChart,\n      barChart,\n      pieChart,\n      selectedPollutant,\n      selectedStation,\n      stations,\n      metadata,\n      timeRange,\n      handleStationChange\n    };\n  }\n};","map":{"version":3,"names":["ref","onMounted","watch","d3","name","setup","timeSeriesChart","mapChart","barChart","pieChart","selectedPollutant","selectedStation","data","stations","metadata","pollutants","timeRange","loadData","response","fetch","value","json","dateRange","start","end","error","console","drawTimeSeries","margin","top","right","bottom","left","width","clientWidth","height","select","selectAll","remove","svg","append","attr","pollutantColors","filteredData","timeSeriesData","filter","d","Pollutant","sort","a","b","Date","x","scaleTime","domain","extent","range","y","scaleLinear","max","Concentration","nice","call","axisBottom","ticks","style","axisLeft","text","Set","map","forEach","pollutant","pollutantData","line","curve","curveMonotoneX","path","datum","pathLength","node","getTotalLength","transition","duration","legend","legendItems","enter","i","dots","delay","tooltip","on","event","chartRect","getBoundingClientRect","mouseX","clientX","mouseY","clientY","html","Units","target","drawMap","laCounty","projection","geoMercator","fitSize","geoPath","features","stationGroups","length","pageX","pageY","currentTarget","handleStationChange","zoom","scaleExtent","transform","applyX","applyY","drawBarChart","stationStats","stat","allPollutants","p","pollutantCounts","totalStations","barData","count","percentage","scaleBand","padding","tickFormat","bars","bandwidth","toFixed","drawPieChart","radius","Math","min","agiRanges","color","Infinity","pieData","total","sum","pie","arc","innerRadius","outerRadius","arcs","attrTween","interpolate","startAngle","endAngle","t","legendText","centerText","handleResize","window","addEventListener"],"sources":["/Users/elinorzhang/Desktop/untitled folder/usc/DSCI554/final project dataset/dashboard/src/App.vue"],"sourcesContent":["<template>\n  <div id=\"app\" class=\"container\">\n    <!-- Title area -->\n    <header class=\"header\">\n      <h1>Air Quality Monitoring Data Visualization</h1>\n      <p>{{ timeRange }}</p>\n    </header>\n\n    <!-- First row: Time series chart -->\n    <div class=\"row\">\n      <div class=\"card\">\n        <h2>Pollutant Concentration Trends</h2>\n        <div class=\"pollutant-selector\">\n          <label>Select Pollutant:</label>\n          <select v-model=\"selectedPollutant\">\n            <option v-for=\"p in metadata.pollutants\" :key=\"p\" :value=\"p\">\n              {{ p }}\n            </option>\n          </select>\n        </div>\n        <div ref=\"timeSeriesChart\" class=\"chart\"></div>\n      </div>\n    </div>\n\n    <!-- Second row: Geographic distribution map -->\n    <div class=\"row\">\n      <div class=\"card\">\n        <h2>Monitoring Station Distribution</h2>\n        <div class=\"station-selector\">\n          <select v-model=\"selectedStation\" @change=\"handleStationChange\">\n            <option value=\"\">All Stations</option>\n            <option v-for=\"station in stations\" :key=\"station['Site ID']\" :value=\"station['Site ID']\">\n              {{ station['Local Site Name'] }}\n            </option>\n          </select>\n        </div>\n        <div ref=\"mapChart\" class=\"chart\"></div>\n      </div>\n    </div>\n\n    <!-- Third row: Statistical charts -->\n    <div class=\"row two-charts\">\n      <div class=\"card\">\n        <h2>Station Pollutant Coverage</h2>\n        <div ref=\"barChart\" class=\"chart\"></div>\n      </div>\n      <div class=\"card\">\n        <h2>AQI Distribution</h2>\n        <div ref=\"pieChart\" class=\"chart\"></div>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport { ref, onMounted, watch } from 'vue'\nimport * as d3 from 'd3'\n\nexport default {\n  name: 'App',\n  setup() {\n    const timeSeriesChart = ref(null)\n    const mapChart = ref(null)\n    const barChart = ref(null)\n    const pieChart = ref(null)\n    const selectedPollutant = ref('')\n    const selectedStation = ref('')\n    \n  const data = ref(null)\n    const stations = ref([])\n    const metadata = ref({ pollutants: [] })\n    const timeRange = ref('')\n\n    const loadData = async () => {\n      try {\n        const response = await fetch('/air_quality_visualization.json')\n        data.value = await response.json()\n        metadata.value = {\n          ...data.value.metadata,\n          pollutants: ['ALL', ...data.value.metadata.pollutants]\n        }\n        stations.value = data.value.stations\n        selectedPollutant.value = metadata.value.pollutants[0]\n        timeRange.value = `${metadata.value.dateRange.start} to ${metadata.value.dateRange.end}`\n      } catch (error) {\n        console.error('Error loading data:', error)\n      }\n    }\n\n    const drawTimeSeries = () => {\n      if (!data.value || !timeSeriesChart.value) return\n\n      const margin = { top: 20, right: 120, bottom: 30, left: 60 }\n      const width = timeSeriesChart.value.clientWidth - margin.left - margin.right\n      const height = 400 - margin.top - margin.bottom\n\n      d3.select(timeSeriesChart.value).selectAll('*').remove()\n\n      const svg = d3.select(timeSeriesChart.value)\n        .append('svg')\n        .attr('width', width + margin.left + margin.right)\n        .attr('height', height + margin.top + margin.bottom)\n        .append('g')\n        .attr('transform', `translate(${margin.left},${margin.top})`)\n\n      const pollutantColors = {\n        'PM2.5': '#FF6B6B',\n        'PM10': '#4ECDC4',\n        'NO2': '#45B7D1',\n        'SO2': '#96CEB4',\n        'CO': '#FFEEAD',\n        'O3': '#D4A5A5'\n      }\n\n      let filteredData\n      if (selectedPollutant.value === 'ALL') {\n        filteredData = data.value.timeSeriesData\n      } else {\n        filteredData = data.value.timeSeriesData\n          .filter(d => d.Pollutant === selectedPollutant.value)\n      }\n      \n      filteredData = filteredData.sort((a, b) => new Date(a.Date) - new Date(b.Date))\n\n      const x = d3.scaleTime()\n        .domain(d3.extent(filteredData, d => new Date(d.Date)))\n        .range([0, width])\n\n      const y = d3.scaleLinear()\n        .domain([0, d3.max(filteredData, d => +d.Concentration)])\n        .range([height, 0])\n        .nice()\n\n      svg.append('g')\n        .attr('transform', `translate(0,${height})`)\n        .call(d3.axisBottom(x).ticks(10))\n        .selectAll('text')\n        .style('text-anchor', 'middle')\n\n      svg.append('g')\n        .call(d3.axisLeft(y))\n\n      svg.append('text')\n        .attr('transform', 'rotate(-90)')\n        .attr('y', 0 - margin.left)\n        .attr('x', 0 - (height / 2))\n        .attr('dy', '1em')\n        .style('text-anchor', 'middle')\n        .text('Concentration')\n\n      if (selectedPollutant.value === 'ALL') {\n        const pollutants = [...new Set(filteredData.map(d => d.Pollutant))]\n        \n        pollutants.forEach(pollutant => {\n          const pollutantData = filteredData.filter(d => d.Pollutant === pollutant)\n          \n          const line = d3.line()\n            .x(d => x(new Date(d.Date)))\n            .y(d => y(+d.Concentration))\n            .curve(d3.curveMonotoneX)\n\n          const path = svg.append('path')\n            .datum(pollutantData)\n            .attr('fill', 'none')\n            .attr('stroke', pollutantColors[pollutant])\n            .attr('stroke-width', 2)\n            .attr('d', line)\n\n          const pathLength = path.node().getTotalLength()\n          path.attr('stroke-dasharray', pathLength)\n            .attr('stroke-dashoffset', pathLength)\n            .transition()\n            .duration(2000)\n            .attr('stroke-dashoffset', 0)\n        })\n\n        const legend = svg.append('g')\n          .attr('class', 'legend')\n          .attr('transform', `translate(${width + 10}, 0)`)\n\n        const legendItems = legend.selectAll('.legend-item')\n          .data(pollutants)\n          .enter()\n          .append('g')\n          .attr('class', 'legend-item')\n          .attr('transform', (d, i) => `translate(0, ${i * 20})`)\n\n        legendItems.append('line')\n          .attr('x1', 0)\n          .attr('x2', 20)\n          .attr('y1', 10)\n          .attr('y2', 10)\n          .attr('stroke', d => pollutantColors[d])\n          .attr('stroke-width', 2)\n\n        legendItems.append('text')\n          .attr('x', 25)\n          .attr('y', 10)\n          .attr('dy', '.35em')\n          .style('font-size', '12px')\n          .text(d => d)\n\n      } else {\n        const line = d3.line()\n          .x(d => x(new Date(d.Date)))\n          .y(d => y(+d.Concentration))\n          .curve(d3.curveMonotoneX)\n\n        const path = svg.append('path')\n          .datum(filteredData)\n          .attr('fill', 'none')\n          .attr('stroke', pollutantColors[selectedPollutant.value])\n          .attr('stroke-width', 2)\n          .attr('d', line)\n\n        const pathLength = path.node().getTotalLength()\n        path.attr('stroke-dasharray', pathLength)\n          .attr('stroke-dashoffset', pathLength)\n          .transition()\n          .duration(2000)\n          .attr('stroke-dashoffset', 0)\n\n        const dots = svg.selectAll('.dot')\n          .data(filteredData)\n          .enter()\n          .append('circle')\n          .attr('class', 'dot')\n          .attr('cx', d => x(new Date(d.Date)))\n          .attr('cy', d => y(+d.Concentration))\n          .attr('r', 4)\n          .attr('fill', pollutantColors[selectedPollutant.value])\n          .style('opacity', 0)\n\n        dots.transition()\n          .delay((d, i) => i * 10)\n          .style('opacity', 1)\n\n        const tooltip = d3.select(timeSeriesChart.value)\n          .append('div')\n          .attr('class', 'tooltip')\n          .style('opacity', 0)\n          .style('position', 'absolute')\n          .style('background-color', 'white')\n          .style('border', '1px solid #ddd')\n          .style('padding', '10px')\n          .style('border-radius', '5px')\n          .style('pointer-events', 'none')\n          .style('z-index', 100)\n\n        dots.on('mouseover', (event, d) => {\n          const chartRect = timeSeriesChart.value.getBoundingClientRect()\n          const mouseX = event.clientX - chartRect.left\n          const mouseY = event.clientY - chartRect.top\n\n          tooltip.transition()\n            .duration(200)\n            .style('opacity', .9)\n          \n          tooltip.html(`\n            Date: ${d.Date}<br/>\n            Concentration: ${d.Concentration} ${d.Units}<br/>\n            AQI: ${d['Daily AQI Value']}\n          `)\n            .style('left', `${mouseX + 10}px`)\n            .style('top', `${mouseY - 28}px`)\n\n\n          d3.select(event.target)\n            .transition()\n            .duration(200)\n            .attr('r', 6)\n        })\n        .on('mousemove', (event) => {\n          const chartRect = timeSeriesChart.value.getBoundingClientRect()\n          const mouseX = event.clientX - chartRect.left\n          const mouseY = event.clientY - chartRect.top\n\n          tooltip\n            .style('left', `${mouseX + 10}px`)\n            .style('top', `${mouseY - 28}px`)\n        })\n        .on('mouseout', (event) => {\n          tooltip.transition()\n            .duration(500)\n            .style('opacity', 0)\n\n          d3.select(event.target)\n            .transition()\n            .duration(200)\n            .attr('r', 4)\n        })\n      }\n    }\n\n    const drawMap = async () => {\n      if (!data.value || !mapChart.value) return\n\n      const margin = { top: 20, right: 20, bottom: 20, left: 20 }\n      const width = mapChart.value.clientWidth - margin.left - margin.right\n      const height = 400 - margin.top - margin.bottom\n\n      d3.select(mapChart.value).selectAll('*').remove()\n\n      const svg = d3.select(mapChart.value)\n        .append('svg')\n        .attr('width', width + margin.left + margin.right)\n        .attr('height', height + margin.top + margin.bottom)\n        .append('g')\n        .attr('transform', `translate(${margin.left},${margin.top})`)\n\n      try {\n        // Load map data\n        const response = await fetch('/geo/los-angeles-county.geojson')\n        const laCounty = await response.json()\n\n        const projection = d3.geoMercator()\n          .fitSize([width, height], laCounty)\n\n        const path = d3.geoPath()\n          .projection(projection)\n\n        svg.append('g')\n          .selectAll('path')\n          .data(laCounty.features)\n          .enter()\n          .append('path')\n          .attr('d', path)\n          .attr('fill', '#f0f0f0')\n          .attr('stroke', '#ccc')\n          .attr('stroke-width', 0.5)\n\n        const stationGroups = svg.append('g')\n          .selectAll('.station')\n          .data(stations.value)\n          .enter()\n          .append('g')\n          .attr('class', 'station')\n          .attr('transform', d => {\n            const [x, y] = projection([+d['Site Longitude'], +d['Site Latitude']])\n            return `translate(${x},${y})`\n          })\n\n        stationGroups.append('circle')\n          .attr('r', 8)\n          .attr('fill', d => d['Site ID'] === selectedStation.value ? '#f44336' : '#2196F3')\n          .attr('opacity', 0)\n          .transition()\n          .duration(1000)\n          .attr('opacity', 0.7)\n\n        stationGroups\n          .on('mouseover', function(event, d) {\n\n            d3.select(this)\n              .append('text')\n              .attr('class', 'station-label')\n              .attr('dy', -10)\n              .text(d['Local Site Name'])\n              .style('text-anchor', 'middle')\n              .style('font-size', '12px')\n              .style('opacity', 0)\n              .transition()\n              .duration(200)\n              .style('opacity', 1)\n\n            const tooltip = d3.select(mapChart.value)\n              .append('div')\n              .attr('class', 'map-tooltip')\n              .style('position', 'absolute')\n              .style('background-color', 'white')\n              .style('padding', '10px')\n              .style('border-radius', '5px')\n              .style('box-shadow', '0 2px 5px rgba(0,0,0,0.2)')\n              .style('pointer-events', 'none')\n              .style('opacity', 0)\n\n            tooltip.html(`\n              <strong>${d['Local Site Name']}</strong><br/>\n              Longitude: ${d['Site Longitude']}<br/>\n              Latitude: ${d['Site Latitude']}<br/>\n              Monitored Pollutants: ${d['Pollutant'].length} types\n            `)\n              .style('left', (event.pageX + 10) + 'px')\n              .style('top', (event.pageY - 10) + 'px')\n              .transition()\n              .duration(200)\n              .style('opacity', 1)\n\n            d3.select(this).select('circle')\n              .transition()\n              .duration(200)\n              .attr('r', 12)\n          })\n          .on('mouseout', function(event, d) {\n            d3.select(this).select('.station-label').remove()\n\n            d3.select(mapChart.value)\n              .selectAll('.map-tooltip')\n              .transition()\n              .duration(200)\n              .style('opacity', 0)\n              .remove()\n\n            if (d['Site ID'] !== selectedStation.value) {\n              d3.select(this).select('circle')\n                .transition()\n                .duration(200)\n                .attr('r', 8)\n                .attr('fill', '#2196F3')\n                .attr('opacity', 0.7)\n            } else {\n              d3.select(this).select('circle')\n                .transition()\n                .duration(200)\n                .attr('r', 12)\n                .attr('fill', '#f44336')\n                .attr('opacity', 0.7)\n            }\n          })\n          .on('click', (event, d) => {\n            stationGroups.selectAll('circle')\n              .transition()\n              .duration(200)\n              .attr('fill', '#2196F3')\n              .attr('r', 8)\n              .attr('opacity', 0.7)\n\n            d3.select(event.currentTarget)\n              .select('circle')\n              .transition()\n              .duration(200)\n              .attr('fill', '#f44336')\n              .attr('r', 12)\n              .attr('opacity', 0.7)\n\n            selectedStation.value = d['Site ID']\n            handleStationChange()\n          })\n\n        const zoom = d3.zoom()\n          .scaleExtent([1, 8])\n          .on('zoom', (event) => {\n            svg.selectAll('path')\n              .attr('transform', event.transform)\n            svg.selectAll('.station')\n              .attr('transform', function(d) {\n                const [x, y] = projection([+d['Site Longitude'], +d['Site Latitude']])\n                return `translate(${event.transform.applyX(x)},${event.transform.applyY(y)})`\n              })\n          })\n\n        svg.call(zoom)\n\n      } catch (error) {\n        console.error('Error loading map data:', error)\n        svg.append('text')\n          .attr('x', width / 2)\n          .attr('y', height / 2)\n          .attr('text-anchor', 'middle')\n          .text('Error loading map data')\n      }\n    }\n\n    const drawBarChart = () => {\n      if (!data.value || !barChart.value) return\n\n      const margin = { top: 20, right: 20, bottom: 40, left: 40 }\n      const width = barChart.value.clientWidth - margin.left - margin.right\n      const height = 400 - margin.top - margin.bottom\n\n      d3.select(barChart.value).selectAll('*').remove()\n\n      const svg = d3.select(barChart.value)\n        .append('svg')\n        .attr('width', width + margin.left + margin.right)\n        .attr('height', height + margin.top + margin.bottom)\n        .append('g')\n        .attr('transform', `translate(${margin.left},${margin.top})`)\n\n      let stationStats = data.value.stationStats\n      if (selectedStation.value) {\n        stationStats = stationStats.filter(stat => stat['Site ID'] === selectedStation.value)\n      }\n\n      const allPollutants = metadata.value.pollutants.filter(p => p !== 'ALL')\n      \n      let pollutantCounts = {}\n      allPollutants.forEach(pollutant => {\n        pollutantCounts[pollutant] = 0\n      })\n\n      stationStats.forEach(stat => {\n        if (stat.Pollutant in pollutantCounts) {\n          pollutantCounts[stat.Pollutant]++\n        }\n      })\n\n      const totalStations = selectedStation.value ? 1 : stations.value.length\n\n      const barData = allPollutants.map(pollutant => ({\n        pollutant,\n        count: pollutantCounts[pollutant],\n        percentage: (pollutantCounts[pollutant] / totalStations) * 100\n      }))\n\n      // Create scales\n      const x = d3.scaleBand()\n        .range([0, width])\n        .domain(allPollutants)\n        .padding(0.3)\n\n      const y = d3.scaleLinear()\n        .range([height, 0])\n        .domain([0, 100])\n\n      svg.append('g')\n        .attr('transform', `translate(0,${height})`)\n        .call(d3.axisBottom(x))\n        .selectAll('text')\n        .style('text-anchor', 'end')\n        .attr('dx', '-.8em')\n        .attr('dy', '.15em')\n        .attr('transform', 'rotate(-45)')\n\n      svg.append('g')\n        .call(d3.axisLeft(y).tickFormat(d => d + '%'))\n\n      const bars = svg.selectAll('.bar')\n        .data(barData)\n        .enter()\n        .append('rect')\n        .attr('class', 'bar')\n        .attr('x', d => x(d.pollutant))\n        .attr('width', x.bandwidth())\n        .attr('y', height)\n        .attr('height', 0)\n        .attr('fill', d => d.pollutant === selectedPollutant.value ? '#f44336' : '#2196F3')\n\n      bars.transition()\n        .duration(1000)\n        .attr('y', d => y(d.percentage))\n        .attr('height', d => height - y(d.percentage))\n\n      svg.selectAll('.bar-label')\n        .data(barData)\n        .enter()\n        .append('text')\n        .attr('class', 'bar-label')\n        .attr('x', d => x(d.pollutant) + x.bandwidth() / 2)\n        .attr('y', d => y(d.percentage) - 5)\n        .attr('text-anchor', 'middle')\n        .text(d => `${d.percentage.toFixed(1)}%`)\n        .style('opacity', 0)\n        .transition()\n        .duration(1000)\n        .style('opacity', 1)\n    }\n\n    const drawPieChart = () => {\n      if (!data.value || !pieChart.value) return\n\n      const margin = { top: 20, right: 160, bottom: 20, left: 20 }\n      const width = pieChart.value.clientWidth - margin.left - margin.right\n      const height = 400 - margin.top - margin.bottom\n      const radius = Math.min(width, height) / 2\n\n      d3.select(pieChart.value).selectAll('*').remove()\n\n      const svg = d3.select(pieChart.value)\n        .append('svg')\n        .attr('width', width + margin.left + margin.right)\n        .attr('height', height + margin.top + margin.bottom)\n        .append('g')\n        .attr('transform', `translate(${width/2 + margin.left},${height/2 + margin.top})`)\n\n      let filteredData = data.value.timeSeriesData\n      if (selectedStation.value) {\n        filteredData = filteredData.filter(d => d['Site ID'] === selectedStation.value)\n      }\n\n      const agiRanges = [\n        { name: 'Good', range: '0-50', min: 0, max: 50, color: '#00e400' },\n        { name: 'Moderate', range: '51-100', min: 51, max: 100, color: '#ffff00' },\n        { name: 'Unhealthy for Sensitive Groups', range: '101-150', min: 101, max: 150, color: '#ff7e00' },\n        { name: 'Unhealthy', range: '151-200', min: 151, max: 200, color: '#ff0000' },\n        { name: 'Very Unhealthy', range: '201-300', min: 201, max: 300, color: '#99004c' },\n        { name: 'Hazardous', range: '>300', min: 301, max: Infinity, color: '#7e0023' }\n      ]\n\n      const pieData = agiRanges.map(range => ({\n        ...range,\n        value: filteredData.filter(d => \n          d['Daily AQI Value'] >= range.min && \n          d['Daily AQI Value'] <= range.max\n        ).length\n      })).filter(d => d.value > 0)\n\n      const total = d3.sum(pieData, d => d.value)\n\n      const pie = d3.pie()\n        .value(d => d.value)\n        .sort(null)\n\n      const arc = d3.arc()\n        .innerRadius(radius * 0.4)\n        .outerRadius(radius * 0.8)\n\n      const arcs = svg.selectAll('.arc')\n        .data(pie(pieData))\n        .enter()\n        .append('g')\n        .attr('class', 'arc')\n\n      arcs.append('path')\n        .attr('d', arc)\n        .attr('fill', d => d.data.color)\n        .attr('stroke', 'white')\n        .style('stroke-width', '2px')\n        .style('opacity', 0)\n        .transition()\n        .duration(1000)\n        .style('opacity', 1)\n        .attrTween('d', function(d) {\n          const interpolate = d3.interpolate({ startAngle: 0, endAngle: 0 }, d)\n          return function(t) {\n            return arc(interpolate(t))\n          }\n        })\n\n      const legend = svg.append('g')\n        .attr('transform', `translate(${radius + 30}, ${-radius})`)\n\n      const legendItems = legend.selectAll('.legend-item')\n        .data(pieData)\n        .enter()\n        .append('g')\n        .attr('class', 'legend-item')\n        .attr('transform', (d, i) => `translate(0, ${i * 60})`)\n\n      legendItems.append('rect')\n        .attr('width', 20)\n        .attr('height', 20)\n        .attr('fill', d => d.color)\n        .style('opacity', 0)\n        .transition()\n        .duration(1000)\n        .style('opacity', 1)\n\n      const legendText = legendItems.append('text')\n        .attr('x', 30)\n        .attr('y', 15)\n        .style('font-size', '12px')\n        .style('opacity', 0)\n\n      legendText.append('tspan')\n        .text(d => `${d.name} (${d.range})`)\n        .style('font-weight', 'bold')\n\n      legendText.append('tspan')\n        .attr('x', 30)\n        .attr('dy', '1.2em')\n        .text(d => `${d.value} times (${(d.value/total*100).toFixed(1)}%)`)\n\n      legendText.transition()\n        .delay(1000)\n        .duration(500)\n        .style('opacity', 1)\n\n      const centerText = svg.append('text')\n        .attr('text-anchor', 'middle')\n        .style('opacity', 0)\n\n      centerText.append('tspan')\n        .text('AQI')\n        .attr('x', 0)\n        .attr('dy', '0em')\n        .style('font-size', '24px')\n        .style('font-weight', 'bold')\n\n      centerText.append('tspan')\n        .text('Distribution')\n        .attr('x', 0)\n        .attr('dy', '1.2em')\n        .style('font-size', '18px')\n\n      centerText.transition()\n        .delay(1500)\n        .duration(500)\n        .style('opacity', 1)\n    }\n\n    const handleStationChange = () => {\n      drawPieChart()\n      drawBarChart()\n    }\n\n    watch(selectedPollutant, () => {\n      drawTimeSeries()\n      drawBarChart()\n    })\n\n    const handleResize = () => {\n      drawTimeSeries()\n      drawMap()\n      drawBarChart()\n      drawPieChart()\n    }\n\n    onMounted(async () => {\n      await loadData()\n      drawTimeSeries()\n      drawMap()\n      drawBarChart()\n      drawPieChart()\n      window.addEventListener('resize', handleResize)\n    })\n\n    return {\n      timeSeriesChart,\n      mapChart,\n      barChart,\n      pieChart,\n      selectedPollutant,\n      selectedStation,\n      stations,\n      metadata,\n      timeRange,\n      handleStationChange\n    }\n  }\n}\n</script>\n\n<style>\n.container {\n max-width: 1400px;\n margin: 0 auto;\n padding: 20px;\n font-family: Arial, sans-serif;\n background-color: #f5f5f5;\n}\n\n.header {\n text-align: center;\n margin-bottom: 30px;\n}\n\n.header h1 {\n color: #333;\n margin-bottom: 10px;\n}\n\n.row {\n margin-bottom: 30px;\n}\n\n.two-charts {\n display: grid;\n grid-template-columns: 1fr 1fr;\n gap: 20px;\n}\n\n.card {\n background: white;\n border-radius: 10px;\n box-shadow: 0 2px 10px rgba(0, 0, 0, 0.1);\n padding: 20px;\n transition: all 0.3s ease;\n}\n\n.card:hover {\n transform: translateY(-2px);\n box-shadow: 0 4px 15px rgba(0, 0, 0, 0.15);\n}\n\n.card h2 {\n color: #333;\n margin-bottom: 20px;\n font-size: 1.2em;\n}\n\n.chart {\n width: 100%;\n height: 400px;\n position: relative;\n}\n\n.pollutant-selector,\n.station-selector {\n margin-bottom: 15px;\n text-align: left;\n}\n\nselect {\n padding: 8px 12px;\n border-radius: 5px;\n border: 1px solid #ddd;\n font-size: 14px;\n background-color: white;\n min-width: 200px;\n cursor: pointer;\n transition: all 0.3s ease;\n}\n\nselect:hover {\n border-color: #2196F3;\n}\n\nselect:focus {\n outline: none;\n border-color: #2196F3;\n box-shadow: 0 0 0 2px rgba(33, 150, 243, 0.2);\n}\n\nlabel {\n margin-right: 10px;\n color: #666;\n}\n\n.tooltip {\n font-size: 12px;\n pointer-events: none;\n z-index: 100;\n box-shadow: 0 2px 5px rgba(0, 0, 0, 0.1);\n line-height: 1.5;\n}\n\n.dot:hover {\n cursor: pointer;\n}\n\n/* Add responsive layout */\n@media (max-width: 1200px) {\n .container {\n   padding: 15px;\n }\n \n .card {\n   padding: 15px;\n }\n}\n\n@media (max-width: 768px) {\n .two-charts {\n   grid-template-columns: 1fr;\n }\n \n .chart {\n   height: 300px;\n }\n \n .card h2 {\n   font-size: 1.1em;\n }\n \n select {\n   width: 100%;\n   max-width: none;\n }\n}\n\n@media (max-width: 480px) {\n .header h1 {\n   font-size: 1.5em;\n }\n \n .chart {\n   height: 250px;\n }\n}\n\n.map-tooltip {\n  z-index: 100;\n  font-size: 12px;\n  line-height: 1.4;\n}\n</style>"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}